name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-back:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - run: mvn -B clean verify
        working-directory: back
      - uses: actions/upload-artifact@v4
        with:
          name: backend-target
          path: back/target
          retention-days: 1

  build-front:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('front/package-lock.json') }}
      - name: Install dependencies
        working-directory: front
        run: npm ci
      - name: Run tests with coverage
        working-directory: front
        run: |
          npm test -- --code-coverage --watch=false --browsers=ChromeHeadless
          sed -i 's|/home/runner/work/bobapp-ci-cd/bobapp-ci-cd/front|./front|g' coverage/bobapp/lcov.info

      - uses: actions/upload-artifact@v4
        with:
          name: front-coverage
          path: front/coverage/bobapp/lcov.info

  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [build-back, build-front]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: backend-target
          path: back/target
      - uses: actions/download-artifact@v4
        with:
          name: front-coverage
          path: front/coverage/bobapp
      - name: Verify files
        run: |
          echo "=== Backend structure ==="
          ls -la back/target/classes/
          echo "=== Frontend coverage ==="
          head -n 20 front/coverage/bobapp/lcov.info
      - uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=Shishifoxy_bobapp-ci-cd
            -Dsonar.organization=shishifoxy
            -Dsonar.sources=front/src/app,back/src/main/java
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml
            -Dsonar.javascript.lcov.reportPaths=front/coverage/bobapp/lcov.info
            -Dsonar.typescript.lcov.reportPaths=front/coverage/bobapp/lcov.info
            -Dsonar.typescript.tsconfigPaths=front/tsconfig.json

  docker-publish:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
      - uses: actions/checkout@v3
      - run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - run: |
          docker build -t shishifoxy1/bobapp-back ./back
          docker push shishifoxy1/bobapp-back
          docker build -t shishifoxy1/bobapp-front ./front
          docker push shishifoxy1/bobapp-front

  deploy:
    name: Simulated Deploy
    runs-on: ubuntu-latest
    needs: [docker-publish]
    steps:
      - run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - run: |
          docker pull shishifoxy1/bobapp-back:latest
          docker pull shishifoxy1/bobapp-front:latest
          docker network create bobapp-network
          docker run -d --name bobapp-back --network bobapp-network -p 8080:8080 shishifoxy1/bobapp-back:latest
          docker run -d --name bobapp-front --network bobapp-network -p 8081:80 shishifoxy1/bobapp-front:latest