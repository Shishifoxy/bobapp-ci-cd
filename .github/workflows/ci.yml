name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-back:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - run: mvn clean verify
        working-directory: back

  build-front:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'front/yarn.lock'

      - name: Install dependencies
        working-directory: front
        run: yarn install --frozen-lockfile

      - name: Run tests with coverage
        working-directory: front
        run: |
          # Nettoyage complet
          rm -rf coverage/ .nyc_output/
          
          # Exécution unique des tests
          yarn test --code-coverage --browsers=ChromeHeadlessCI --watch=false --no-progress
          
          # Recherche exhaustive du rapport
          REPORT_PATH=$(find . -name "lcov.info" | head -1)
          if [ -f "$REPORT_PATH" ]; then
            echo "✔ Rapport trouvé à: $REPORT_PATH"
            cp "$REPORT_PATH" ../front-coverage.info
          else
            echo "::error::Aucun rapport lcov.info trouvé!"
            echo "Structure complète:"
            find . -type d
            echo "Contenu de coverage/:"
            ls -la coverage/ || true
            exit 1
          fi

      - name: Verify coverage report
        run: |
          echo "=== Rapport final ==="
          echo "Emplacement: $(pwd)/front-coverage.info"
          echo "Taille: $(wc -l < front-coverage.info) lignes"
          head -5 front-coverage.info

  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [build-back, build-front]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: SonarCloud Scan
        working-directory: back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=Shishifoxy_bobapp-ci-cd \
            -Dsonar.organization=shishifoxy \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.javascript.lcov.reportPaths=../front-coverage.info \
            -Dsonar.typescript.lcov.reportPaths=../front-coverage.info \
            -Dsonar.sources=src,../front/src \
            -Dsonar.tests=src/test,../front/src/app

  docker-publish:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
      - uses: actions/checkout@v3
      - run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - run: |
          docker build -t shishifoxy1/bobapp-back ./back
          docker push shishifoxy1/bobapp-back
      - run: |
          docker build -t shishifoxy1/bobapp-front ./front
          docker push shishifoxy1/bobapp-front

  deploy:
    name: Simulated Deploy
    runs-on: ubuntu-latest
    needs: [docker-publish]
    steps:
      - run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - run: |
          docker pull shishifoxy1/bobapp-back:latest
          docker pull shishifoxy1/bobapp-front:latest
          docker network create bobapp-network
          docker run -d --name bobapp-back --network bobapp-network -p 8080:8080 shishifoxy1/bobapp-back:latest
          docker run -d --name bobapp-front --network bobapp-network -p 8081:80 shishifoxy1/bobapp-front:latest