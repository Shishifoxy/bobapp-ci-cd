name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-back:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - run: mvn clean verify
        working-directory: back

  build-front:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: front
        run: npm ci

      - name: Run tests with coverage
        working-directory: front
        run: |
          rm -rf coverage
          npm run test
          if [ -f "coverage/lcov.info" ]; then
            echo "✔ Rapport lcov.info trouvé"
            cp coverage/lcov.info front-coverage.info
          else
            echo "::error::Fichier lcov.info introuvable dans coverage/"
            ls -la coverage/
            exit 1
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage
          path: front/front-coverage.info

  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [build-back, build-front]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: front-coverage
          path: front/

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "=== Vérification du rapport front ==="
          ls -la front/front-coverage.info
          head -5 front/front-coverage.info

          mvn -f back/pom.xml clean verify sonar:sonar \
            -Dsonar.projectKey=Shishifoxy_bobapp-ci-cd \
            -Dsonar.organization=shishifoxy \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.projectBaseDir=. \
            -Dsonar.sources=back/src/main/java,front/src/app \
            -Dsonar.tests=back/src/test/java,front/src/app \
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml \
            -Dsonar.javascript.lcov.reportPaths=front/front-coverage.info \
            -Dsonar.typescript.lcov.reportPaths=front/front-coverage.info \
            -Dsonar.exclusions=**/*Test.java,**/*Tests.java \
            -Dsonar.inclusions=**/*.java,**/*.ts \
            -Dsonar.sourceEncoding=UTF-8

  docker-publish:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
      - uses: actions/checkout@v3
      - run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - run: |
          docker build -t shishifoxy1/bobapp-back ./back
          docker push shishifoxy1/bobapp-back
      - run: |
          docker build -t shishifoxy1/bobapp-front ./front
          docker push shishifoxy1/bobapp-front

  deploy:
    name: Simulated Deploy
    runs-on: ubuntu-latest
    needs: [docker-publish]
    steps:
      - run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - run: |
          docker pull shishifoxy1/bobapp-back:latest
          docker pull shishifoxy1/bobapp-front:latest
          docker network create bobapp-network
          docker run -d --name bobapp-back --network bobapp-network -p 8080:8080 shishifoxy1/bobapp-back:latest
          docker run -d --name bobapp-front --network bobapp-network -p 8081:80 shishifoxy1/bobapp-front:latest
